files:
  "/etc/nginx/nginx.conf":
    mode: "000644"
    owner: "root"
    group: "root"
    content: |
      user nginx;
      error_log /var/log/nginx/error.log warn;
      pid /var/run/nginx.pid;
      worker_processes auto;
      worker_rlimit_nofile 200000;

      events {
          worker_connections 1024;
      }

      http {
          server_tokens off;

          types_hash_max_size 4096;
          types_hash_bucket_size 128;

          include /etc/nginx/mime.types;
          default_type application/octet-stream;

          log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for"';

          include conf.d/*.conf;

          map $http_upgrade $connection_upgrade {
              default "upgrade";
          }

          server {
              listen 80 default_server;
              access_log /var/log/nginx/access.log main;

              client_header_timeout 60;
              client_body_timeout 60;
              keepalive_timeout 60;
              gzip off;
              gzip_comp_level 4;
              gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/x;

              location / {
                  proxy_pass http://127.0.0.1:8000;
                  proxy_set_header Host $host;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection "Upgrade";
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  
                  add_header Access-Control-Allow-Origin *;
                  add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                  add_header Access-Control-Allow-Headers "Authorization, Content-Type";

                  if ($request_method = 'OPTIONS') {
                      add_header Access-Control-Allow-Origin *;
                      add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                      add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                      add_header Content-Length 0;
                      add_header Content-Type text/plain;
                      return 204;
                  }
              }

              include conf.d/elasticbeanstalk/*.conf;
          }
      }

container_commands:
  01_reload_nginx:
    command: "systemctl restart nginx"
