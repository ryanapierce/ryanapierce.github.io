name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Create Virtual Environment and Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt || pip install -r assets/projects/about-me-chat-bot/requirements.txt

      - name: Manually Set AWS Credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_REGION=us-east-1
          aws configure list
          aws sts get-caller-identity

      - name: Check AWS CLI Version
        run: aws --version

      - name: Install AWS Elastic Beanstalk CLI
        run: |
          pip install --upgrade awsebcli
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          eb --version  # Verify installation

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Verify Elastic Beanstalk Environment Status
        id: check_env
        continue-on-error: true
        run: |
          if eb list about-me-chat-bot-env > /dev/null 2>&1; then
            echo "env_exists=true" >> $GITHUB_ENV
          else
            echo "env_exists=false" >> $GITHUB_ENV
          fi

      - name: Deploy to Elastic Beanstalk
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          source venv/bin/activate
          echo "y" | eb init -p "Python 3.11 running on 64bit Amazon Linux 2023" about-me-chat-bot-env --region us-east-1

          if [[ "${{ env.env_exists }}" == "false" ]]; then
            echo "Elastic Beanstalk environment does not exist. Creating a new one..."
            eb create about-me-chat-bot-env --platform "Python 3.11 running on 64bit Amazon Linux 2023" --region us-east-1 --keyname new-key-pair
          else
            echo "Elastic Beanstalk environment exists. Deploying application..."
            eb deploy about-me-chat-bot-env --timeout 20
          fi

